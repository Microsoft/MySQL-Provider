// -*- idl -*-

// --------------------------------- START OF LICENSE ----------------------------
//
// MySQL cimprov ver. 1.0
//
// Copyright (c) Microsoft Corporation
//
// All rights reserved. 
//
// MIT License
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the ""Software""), to deal
// in the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
// of the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//
// ---------------------------------- END OF LICENSE -----------------------------

#pragma locale ("en_US")

// MySQL_Server
// -------------------------------------------------------------------
[   Version ( "1.0.0" ), 
    Description ( "MySQL Server Information" )
]
class MySQL_Server : CIM_InstalledProduct {

    [ Description ( "Configuration file for the server" ) ]
    string ConfigurationFile;

    [ Description ( "Log file containing all errors output from MySQL" ) ]
    string ErrorLogFile;

    [ Description ( "Server hostname" ) ]
    string Hostname;

    [ Description ( "Bind Address that MySQL is listening on" ) ]
    string BindAddress;

    [ Description ( "Port that MySQL is listening on" ) ]
    uint16 Port;

    [ Description ( "Socket file used to connect to the MySQL instance" ) ]
    string SocketFile;

    [ Description ( "Directory where MySQL is storing all data" ) ]
    string DataDirectory;

    [ Description ( "Current operating status for the MySQL instance" ),
      ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" },
      Values { "Unknown", "Other", "OK", "Degraded", "Stressed", "Predictive Failure", "Error", "Non-Recoverable Error", "Starting", "Stopping", "Stopped", "In Service", "No Contact",  "Lost Communication", "Aborted", "Dormant", "Supporting Entity in Error", "Completed", "Power Mode", "Insufficient Privileges", "Authentication File in Error" }
    ]
    string OperatingStatus;

    [
        Description ( "This function updates the MySQL Server credentials used by the MySQL OMI provider." ),
        Static(true)
    ]
    boolean UpdateCredentials(
        [IN] uint16 Port,
        [IN] string BindAddress,
        [IN] string Username,
        [IN] string Password,
        [IN] boolean B64Encoded);

    [
        Description ( "This function deletes the MySQL Server credentials used by the MySQL OMI provider." ),
        Static(true)
    ]
    boolean DeleteCredentials(
        [IN] uint16 Port);

};

// MySQL_ServerStatistics
// -------------------------------------------------------------------
[   Version ( "1.0.0" ), 
    Description ( "MySQL Server Statistical Information" )
]
class MySQL_ServerStatistics : CIM_StatisticalData {

    [ Description ( "How many current open threads (connections) are connected to a MySQL Server instance" ) ]
    uint32 CurrentNumConnections;

    [ Description ( "Maximum amount of connections allowed for MySQL Server instance" ) ]
    uint32 MaxConnections;

    [ Description ( "Amount of time (seconds) the server has been up" ) ]
    uint64 Uptime;

    [ Description ( "Amount of disk space used (in bytes) by MySQL Server instance" ) ]
    uint64 ServerDiskUseInBytes;

    [ Description ( "The percent of connections in use by the Server" ) ]
    uint8 ConnectionsUsePct;

    [ Description ( "The percent of connections failed when connecting to the Server" ) ]
    uint8 AbortedConnectionPct;

    [ Description ( "Number of slow queries compared to all queries" ) ]
    uint8 SlowQueryPct;

    [ Description ( "Key Cache Hit Rate for MySQL Server instance" ) ]
    uint8 KeyCacheHitPct;

    [ Description ( "Key Cache Write Rate for MySQL Server instance" ) ]
    uint8 KeyCacheWritePct;

    [ Description ( "Percent of Key Cache Use for MySQL Server instance" ) ]
    uint8 KeyCacheUsePct;

    [ Description ( "Query Cache Hit Rate for MySQL Server instance" ) ]
    uint8 QCacheHitPct;

    [ Description ( "Query Cache Low Memory Prunes from cache" ) ]
    uint8 QCachePrunesPct;

    [ Description ( "Percent of Query Cache Use for MySQL Server instance" ) ]
    uint8 QCacheUsePct;

    [ Description ( "Table Cache hit rate" ) ]
    uint8 TCacheHitPct;

    [ Description ( "Table Lock contention rate" ) ]
    uint8 TableLockContentionPct;

    [ Description ( "Percent of Table Cache Use for MySQL Server instance" ) ]
    uint8 TableCacheUsePct;

    [ Description ( "Percent of InnoDB logical read requests satisfied from the buffer pool" ) ]
    uint8 IDB_BP_HitPct;

    [ Description ( "How much of the InnoDB buffer pool is being used" ) ]
    uint8 IDB_BP_UsePct;

    [ Description ( "Percentage of full tables scans" ) ]
    uint8 FullTableScanPct;

};

// MySQL_Server_Database
// -------------------------------------------------------------------
[   Version ( "1.0.0" ), 
    Description ( "MySQL Server Database Information" )
]
class MySQL_Server_Database : CIM_CommonDatabase {

    [ Description ( "Name of database" ) ]
    string DatabaseName;

    [ Description ( "Number of tables a database contains" ) ]
    uint64 NumberOfTables;

    [ Description ( "How much space (in bytes) a database in MySQL is using" ) ]
    uint64 DiskSpaceInBytes;

};

// MySQL_StoredProcedureRow_AsXML
// -------------------------------------------------------------------
[   Version ( "1.0.0" ), 
    Description (
        "The MySQL_StoredProcedureRow_AsXML class contains information about"
        "a specific row from a MySQL stored procedure result set. The output"
        "of the result set is in XML format." )
]
class MySQL_StoredProcedureRow_AsXML {

    [ Key,
      Description (
            "The InstanceID is a unique identifier of a specific row in a stored"
            "procedure's result set. It is a concatenation of the hostname,"
            "bind-address, port, database name, stored procedure name, and row"
            "number" ) ]
    string InstanceID;

    [ Description ( "The port for the MySQL Server hosting the MySQL Database" ) ]
    uint16 Port;

    [ Description ( "Name of database" ) ]
    string DatabaseName;

    [ Description ( "The stored procedure's name" ) ]
    string StoredProcedureName;

    [ Description ( "The parameters to pass to the stored procedure" ) ]
    string Parameters;

    [ Description ( "The specific row (in XML form) returned from the stored procedure" ) ]
    string RowXMLValue;

    [ Description ( "Indicates whether or not the fields returned in the result set were truncated"
                    " due to size restrictions; where true is truncated and false is not truncated" ) ]
    boolean IsTruncated;

};
