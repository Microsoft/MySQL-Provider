//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.SystemCenter.CrossPlatform.ClientLibrary.CredentialManagement.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.SystemCenter.CrossPlatform.ClientLibrary.CredentialManagement.Propertie" +
                            "s.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate credentials error..
        /// </summary>
        internal static string CredentialSet_Add_Duplicate_credentials_error {
            get {
                return ResourceManager.GetString("CredentialSet_Add_Duplicate_credentials_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No SSH credential has been added..
        /// </summary>
        internal static string CredentialSet_Add_No_SSH_credential_has_been_added {
            get {
                return ResourceManager.GetString("CredentialSet_Add_No_SSH_credential_has_been_added", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSH credential already exists..
        /// </summary>
        internal static string CredentialSet_Add_SSH_credential_already_exists {
            get {
                return ResourceManager.GetString("CredentialSet_Add_SSH_credential_already_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sudo elevation SSH credential already exists..
        /// </summary>
        internal static string CredentialSet_Add_Sudo_elevation_SSH_credential_already_exists {
            get {
                return ResourceManager.GetString("CredentialSet_Add_Sudo_elevation_SSH_credential_already_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplied credentials are invalid / empty..
        /// </summary>
        internal static string CredentialSet_Add_Supplied_credentials_are_invalid_or_empty {
            get {
                return ResourceManager.GetString("CredentialSet_Add_Supplied_credentials_are_invalid_or_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SshKey value has not been initialized for SSH Key credential..
        /// </summary>
        internal static string CredentialSet_GetXmlSshPassword_SshKey_value_not_initialized {
            get {
                return ResourceManager.GetString("CredentialSet_GetXmlSshPassword_SshKey_value_not_initialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Credentials not found in Critieria..
        /// </summary>
        internal static string CredentialSet_Remove_Credentials_not_found_in_Critieria {
            get {
                return ResourceManager.GetString("CredentialSet_Remove_Credentials_not_found_in_Critieria", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authentication data in parameter {0} contains an illegal character at position {1}.  Authentication data can only contain characters from the US-ASCII character encoding..
        /// </summary>
        internal static string IllegalAuthenticationCharacterException_DefaultMessage {
            get {
                return ResourceManager.GetString("IllegalAuthenticationCharacterException_DefaultMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH key could not be read because the credentials do not specify a key file..
        /// </summary>
        internal static string NullSshKey {
            get {
                return ResourceManager.GetString("NullSshKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An SCX Monitor Run As account cannot use &apos;su&apos; elevation..
        /// </summary>
        internal static string PasswordAuthenticationDataGenerator_InvalidMonitorRunAsAccountElevation {
            get {
                return ResourceManager.GetString("PasswordAuthenticationDataGenerator_InvalidMonitorRunAsAccountElevation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An SCX Run As account cannot have a null password.  Empty passwords are supported but may not be accepted by the UNIX/Linux host..
        /// </summary>
        internal static string PasswordAuthenticationDataGenerator_NullRunAsAccountPassword {
            get {
                return ResourceManager.GetString("PasswordAuthenticationDataGenerator_NullRunAsAccountPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An SCX Run As account cannot have a null password for su elevation..
        /// </summary>
        internal static string PasswordAuthenticationDataGenerator_NullRunAsAccountSuPassword {
            get {
                return ResourceManager.GetString("PasswordAuthenticationDataGenerator_NullRunAsAccountSuPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An SCX Run As account must have a valid name..
        /// </summary>
        internal static string RunAsAccount_RunAsAccountMustHaveValidName {
            get {
                return ResourceManager.GetString("RunAsAccount_RunAsAccountMustHaveValidName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An SCX Run As account must have a valid username..
        /// </summary>
        internal static string RunAsAccount_RunAsAccountMustHaveValidUsername {
            get {
                return ResourceManager.GetString("RunAsAccount_RunAsAccountMustHaveValidUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RunAs account cannot be updated; there is a conflict in the authentication data..
        /// </summary>
        internal static string ScxRunAsAccountHelper_BadDeserialization {
            get {
                return ResourceManager.GetString("ScxRunAsAccountHelper_BadDeserialization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SCX Run As account &apos;{0}&apos; already exists..
        /// </summary>
        internal static string ScxRunAsAccountHelper_RunAsAccountAlreadyExists {
            get {
                return ResourceManager.GetString("ScxRunAsAccountHelper_RunAsAccountAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown elevation type: {0}..
        /// </summary>
        internal static string ScxRunAsAccountHelper_UnknownElevationType {
            get {
                return ResourceManager.GetString("ScxRunAsAccountHelper_UnknownElevationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object ID {0} is not a valid SCX Run As account ID..
        /// </summary>
        internal static string ScxRunAsPSSupport_BadScxRunAsAccountId {
            get {
                return ResourceManager.GetString("ScxRunAsPSSupport_BadScxRunAsAccountId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SCX Run As account must specify the path to a valid SSH key..
        /// </summary>
        internal static string SshKeyAuthenticationDataGenerator_InvalidRunAsAccountKeyfile {
            get {
                return ResourceManager.GetString("SshKeyAuthenticationDataGenerator_InvalidRunAsAccountKeyfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An SCX Run As account cannot have a null passphrase.  An empty passphrase can be used if the SSH key is not encrypted..
        /// </summary>
        internal static string SshKeyAuthenticationDataGenerator_NullRunAsAccountPassphrase {
            get {
                return ResourceManager.GetString("SshKeyAuthenticationDataGenerator_NullRunAsAccountPassphrase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH key is too long..
        /// </summary>
        internal static string SshKeyValidation_MaxKeyLengthExceeded {
            get {
                return ResourceManager.GetString("SshKeyValidation_MaxKeyLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file provided for the SSH key is not a recognizable SSH private key format..
        /// </summary>
        internal static string SshKeyValidation_UnrecognizedFormat {
            get {
                return ResourceManager.GetString("SshKeyValidation_UnrecognizedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH key was created by an unsupported SSH implementation. The key must be converted into a supported format before it can be used..
        /// </summary>
        internal static string SshKeyValidation_UnsupportedFormat_CommercialSsh {
            get {
                return ResourceManager.GetString("SshKeyValidation_UnsupportedFormat_CommercialSsh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH key was created using the OpenSSH implementation and is not supported.  The key must be converted into a supported format before it can be used..
        /// </summary>
        internal static string SshKeyValidation_UnsupportedFormat_OpenSsh {
            get {
                return ResourceManager.GetString("SshKeyValidation_UnsupportedFormat_OpenSsh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH key was created using SSH version 1. Such keys have known vulnerabilities and are not supported..
        /// </summary>
        internal static string SshKeyValidation_UnsupportedFormat_SshV1Rsa {
            get {
                return ResourceManager.GetString("SshKeyValidation_UnsupportedFormat_SshV1Rsa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH key is not a supported version..
        /// </summary>
        internal static string SshKeyValidation_UnsupportedVersion {
            get {
                return ResourceManager.GetString("SshKeyValidation_UnsupportedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH key contains invalid data at line {0}..
        /// </summary>
        internal static string SshKeyValidation_ValidationError {
            get {
                return ResourceManager.GetString("SshKeyValidation_ValidationError", resourceCulture);
            }
        }
    }
}
